/*
	Topologically sorts a given graph, if possible.
*/

	int sorted[] = new int[graph.length], parentCount[] = new int[graph.length], qptr = 0;
	for( int i = 0; i < graph.length; i++ ) for( int j = 0; j < graph[i].length; j++ ) parentCount[graph[i][j]]++;
	for( int i = 0; i < graph.length; i++ ) if( parentCount[i] == 0 ) sorted[qptr++] = i;
	for( int i = 0; i < graph.length; i++ )
	{
		// if( i >= qptr ) ERROR; // if the graph is not a DAG, then ERROR will be executed
		int[] children = graph[sorted[i]];
		for( int child : children )
		{
			parentCount[child]--;
			if( parentCount[child] == 0 ) sorted[qptr++] = child;
		}
	}
