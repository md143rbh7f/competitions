/*
	Returns the Levenshtein distance between two Strings.
	Code is in Java. Commented out are variations using C++ or Java char[]'s.
*/

	//int edit_distance( string a, string b )
	//static int edit_distance( char[] a, char[] b )
	static int edit_distance( String a, String b )
	{
		//int m = a.size(), n = b.size();
		//int m = a.length, n = b.length;
		int m = a.length(), n = b.length();
		int[][] d = new int[m+1][2];
		for( int i = 0; i <= m; i++ ) d[i][0] = i;

		for( int j = 1; j <= n; j++ )
		{
			d[0][j%2] = j;
			for( int i = 1; i <= m; i++ )
			{
				//if( a[i-1] == b[j-1] ) d[i][j] = d[i-1][(j-1)%2];
				if( a.charAt(i-1) == b.charAt(j-1) ) d[i][j%2] = d[i-1][(j-1)%2];
				else d[i][j%2] = 1+Math.min( d[i-1][(j-1)%2], Math.min( d[i][(j-1)%2], d[i-1][j%2] ) );
			}
		}

		return d[m][n%2];
	}
